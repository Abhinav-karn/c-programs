//recursion program for the linear and binary search .
#include <iostream>
using namespace std;

bool binary_search(int arr[], int s, int e, int key) {
    // base case
    // element not found
    if (s > e) {
        return false;
    }
    int mid = s + (e - s) / 2;
    if (arr[mid] == key) {
        return true;
    }
    if (arr[mid] > key) {
        return binary_search(arr, s, mid - 1, key);
    } else {
        return binary_search(arr, mid + 1, e, key);
    }
}

bool linear_search(int arr[], int size, int key) {
    // base case
    if (size == 0) {
        return false;
    }
    if (arr[0] == key) {
        return true;
    }
    // recursive case
    else {
        return linear_search(arr + 1, size - 1, key);
    }
}

int main() {
    int arr[10] = {1, 2, 3, 5, 6, 8, 11, 19, 15, 17};
    int size = 10;
    int key = 13;

    bool ans1 = linear_search(arr, size, key);
    bool ans2 = binary_search(arr, 0, size - 1, key);

    cout << "by linear_s: " << ans1 << endl;
    cout << "by binary_s: " << ans2 << endl;

    return 0;
}
